<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qy.sp.manage.dao.impl.PipleProductDao" >
  <resultMap id="BaseResultMap" type="com.qy.sp.manage.dto.TPipleProduct" >
    <id column="PIPLE_ID" property="pipleId" jdbcType="VARCHAR" />
    <id column="PRODUCT_ID" property="productId" jdbcType="VARCHAR" />
    <result column="PIPLE_PRODUCT_CODE" property="pipleProductCode" jdbcType="VARCHAR" />
    <result column="PIPLE_PRODUCT_ABBR_CODE" property="pipleProductAbbrCode" jdbcType="VARCHAR" />
    <result column="OP_STATUS" property="opStatus" jdbcType="INTEGER" />
    <result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
    <result column="PRODUCT_NAME" property="productName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    PIPLE_ID, PRODUCT_ID, PIPLE_PRODUCT_CODE, PIPLE_PRODUCT_ABBR_CODE, OP_STATUS
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.qy.sp.manage.dto.TPipleProductKey" >
    select 
    <include refid="Base_Column_List" />
    from t_piple_product
    where PIPLE_ID = #{pipleId,jdbcType=VARCHAR}
      and PRODUCT_ID = #{productId,jdbcType=VARCHAR}
  </select>
  <select id="getPipleProList" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    t1.PIPLE_ID as PIPLE_ID, t1.PRODUCT_ID as PRODUCT_ID, t1.PIPLE_PRODUCT_CODE as PIPLE_PRODUCT_CODE, 
    t1.PIPLE_PRODUCT_ABBR_CODE as PIPLE_PRODUCT_ABBR_CODE, t1.OP_STATUS as OP_STATUS,
    t2.PRODUCT_CODE as PRODUCT_CODE,t2.PRODUCT_NAME as PRODUCT_NAME
    from t_piple_product t1,t_product t2
    where t1.PRODUCT_ID = t2.PRODUCT_ID and t1.PIPLE_ID = #{pipleId,jdbcType=VARCHAR} ORDER BY t1.PRODUCT_ID*1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.qy.sp.manage.dto.TPipleProductKey" >
    delete from t_piple_product
    where PIPLE_ID = #{pipleId,jdbcType=VARCHAR}
      and PRODUCT_ID = #{productId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.qy.sp.manage.dto.TPipleProduct" >
    insert into t_piple_product (PIPLE_ID, PRODUCT_ID, PIPLE_PRODUCT_CODE, 
      PIPLE_PRODUCT_ABBR_CODE, OP_STATUS)
    values (#{pipleId,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, #{pipleProductCode,jdbcType=VARCHAR}, 
      #{pipleProductAbbrCode,jdbcType=VARCHAR}, #{opStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertBatch"  parameterType="java.util.List">  
    insert into  t_piple_product (PIPLE_ID, PRODUCT_ID, PIPLE_PRODUCT_CODE, 
      PIPLE_PRODUCT_ABBR_CODE, OP_STATUS)  
    values  
    <foreach collection="list" item="item" index="index" separator="," >  
        (#{item.pipleId},#{item.productId},#{item.pipleProductCode},#{item.pipleProductAbbrCode},#{item.opStatus})  
    </foreach>  
  </insert> 
  <insert id="insertSelective" parameterType="com.qy.sp.manage.dto.TPipleProduct" >
    insert into t_piple_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pipleId != null" >
        PIPLE_ID,
      </if>
      <if test="productId != null" >
        PRODUCT_ID,
      </if>
      <if test="pipleProductCode != null" >
        PIPLE_PRODUCT_CODE,
      </if>
      <if test="pipleProductAbbrCode != null" >
        PIPLE_PRODUCT_ABBR_CODE,
      </if>
      <if test="opStatus != null" >
        OP_STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pipleId != null" >
        #{pipleId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="pipleProductCode != null" >
        #{pipleProductCode,jdbcType=VARCHAR},
      </if>
      <if test="pipleProductAbbrCode != null" >
        #{pipleProductAbbrCode,jdbcType=VARCHAR},
      </if>
      <if test="opStatus != null" >
        #{opStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qy.sp.manage.dto.TPipleProduct" >
    update t_piple_product
    <set >
      <if test="pipleProductCode != null" >
        PIPLE_PRODUCT_CODE = #{pipleProductCode,jdbcType=VARCHAR},
      </if>
      <if test="pipleProductAbbrCode != null" >
        PIPLE_PRODUCT_ABBR_CODE = #{pipleProductAbbrCode,jdbcType=VARCHAR},
      </if>
      <if test="opStatus != null" >
        OP_STATUS = #{opStatus,jdbcType=INTEGER},
      </if>
    </set>
    where PIPLE_ID = #{pipleId,jdbcType=VARCHAR}
      and PRODUCT_ID = #{productId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qy.sp.manage.dto.TPipleProduct" >
    update t_piple_product
    set PIPLE_PRODUCT_CODE = #{pipleProductCode,jdbcType=VARCHAR},
      PIPLE_PRODUCT_ABBR_CODE = #{pipleProductAbbrCode,jdbcType=VARCHAR},
      OP_STATUS = #{opStatus,jdbcType=INTEGER}
    where PIPLE_ID = #{pipleId,jdbcType=VARCHAR}
      and PRODUCT_ID = #{productId,jdbcType=VARCHAR}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
  	update t_piple_product
          <trim prefix="set" suffixOverrides=",">
           <trim prefix="PIPLE_PRODUCT_CODE =case" suffix="end,">
               <foreach collection="list" item="i" index="index">
                       <if test="i.pipleProductCode!=null">
                        when PRODUCT_ID=#{i.productId} then #{i.pipleProductCode}
                       </if>
               </foreach>
            </trim>
            <trim prefix=" PIPLE_PRODUCT_ABBR_CODE =case" suffix="end,">
               <foreach collection="list" item="i" index="index">
                       <if test="i.pipleProductAbbrCode!=null">
                        when PRODUCT_ID=#{i.productId} then #{i.pipleProductAbbrCode}
                       </if>
               </foreach>
            </trim>
            
            <trim prefix="OP_STATUS =case" suffix="end," >
               <foreach collection="list" item="i" index="index">
                       <if test="i.opStatus!=null">
                        when PRODUCT_ID=#{i.productId} then #{i.opStatus}
                       </if>
               </foreach>
            </trim>
           </trim>
          where
          <foreach collection="list" separator="or" item="i" index="index" >
            PRODUCT_ID=#{i.productId} and PIPLE_ID=#{i.pipleId}
        </foreach>
  </update>
</mapper>